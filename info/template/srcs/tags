!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
add_item	item_render_utils.c	/^void	add_item(t_item **items, t_item *new_item)$/;"	f
add_wall	wall_render_utils.c	/^void	add_wall(t_tile **walls, t_tile *new_wall)$/;"	f
calculate_Delta	delta.c	/^void	calculate_Delta(t_cub *cub)$/;"	f
clamp	math.c	/^float clamp(float value, float min, float max)$/;"	f
clear_item	item_render_utils.c	/^void	clear_item(t_cub *cub)$/;"	f
cub_init	init_cub.c	/^void	cub_init(t_cub *cub)$/;"	f
draw_items	item_render.c	/^void	draw_items(t_cub *cub)$/;"	f
draw_map	render_utils.c	/^void draw_map(t_cub *cub)$/;"	f
draw_walls	wall_render.c	/^void	draw_walls(t_cub *cub)$/;"	f
drawobj	render_utils.c	/^void	drawobj(t_image *image, t_point pos, t_point size, int color)$/;"	f
drawtexture	render_utils.c	/^void	drawtexture(t_image *image, t_image *texture, t_point pos, long double scale)$/;"	f
free_displays	free_displays.c	/^int	free_displays(t_cub *cub)$/;"	f
free_items	item_render_utils.c	/^void	free_items(t_item *items)$/;"	f
free_walls	wall_render_utils.c	/^void	free_walls(t_tile *walls)$/;"	f
ft_abs	math.c	/^int	ft_abs(int num)$/;"	f
ft_free_arr	ft_free.c	/^void	ft_free_arr(char **arr)$/;"	f
ft_free	ft_free.c	/^void	ft_free(t_cub *cub, char *line)$/;"	f
ft_freesplit	free_displays.c	/^void	ft_freesplit(char **str)$/;"	f
ft_get_color	render_utils.c	/^int ft_get_color(t_image *data, int x, int y)$/;"	f
ft_pixelput	ft_pixelput.c	/^void	ft_pixelput(t_image *data, int x, int y, int color)$/;"	f
game_loop	game_loop.c	/^int	game_loop(t_cub *cub)$/;"	f
game_start	game_loop.c	/^void	game_start(t_cub *cub)$/;"	f
get_mouse_position	get_mouse_pos.c	/^t_point get_mouse_position(t_cub *cub)$/;"	f
get_time	get_time.c	/^long long	get_time(void)$/;"	f
init_window	init_window.c	/^void	init_window(t_cub *cub)$/;"	f
is_touching_wall_left	wall_render_utils.c	/^int	is_touching_wall_left(t_cub *cub)$/;"	f
is_touching_wall_right	wall_render_utils.c	/^int	is_touching_wall_right(t_cub *cub)$/;"	f
items_count	item_render_utils.c	/^int	items_count(t_item *items)$/;"	f
key_pressed	input_handler.c	/^int	key_pressed(int keysym, t_cub *cub)$/;"	f
key_released	input_handler.c	/^int	key_released(int keysym, t_cub *cub)$/;"	f
main	main.c	/^int	main(void)$/;"	f
new_item	item_render_utils.c	/^t_item  *new_item(t_cub* cub)$/;"	f
new_wall	wall_render_utils.c	/^t_tile  *new_wall(t_cub* cub)$/;"	f
normalize	math.c	/^t_point	normalize(t_point point)$/;"	f
position_item	item_render.c	/^void	position_item(t_cub *cub)$/;"	f
position_wall	wall_render.c	/^void	position_wall(t_cub *cub)$/;"	f
read_map	render_utils.c	/^char	**read_map(void)$/;"	f
renderer	game_loop.c	/^int	renderer(t_cub *cub)$/;"	f
touching_floor	wall_render.c	/^void	touching_floor(t_cub *cub)$/;"	f
update	game_loop.c	/^int	update(t_cub *cub)$/;"	f
