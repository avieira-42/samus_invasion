!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/avieira-/repos/common_core/milestone_2/so_long/srcs/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
add_item	item_render_utils.c	/^void	add_item(t_item **items, t_item *new_item)$/;"	f	typeref:typename:void
add_wall	wall_render.c	/^void	add_wall(t_tile **walls, t_tile *new_wall)$/;"	f	typeref:typename:void
calculate_Delta	delta.c	/^void	calculate_Delta(t_game *game)$/;"	f	typeref:typename:void
clamp	math.c	/^float clamp(float value, float min, float max)$/;"	f	typeref:typename:float
clear_item	item_render_utils.c	/^void	clear_item(t_game *game)$/;"	f	typeref:typename:void
contiguous_ceiling	collisions_utils.c	/^int	contiguous_ceiling(t_game *game, t_point floor_pos)$/;"	f	typeref:typename:int
contiguous_floor	collisions_utils.c	/^int	contiguous_floor(t_game *game, t_point ceiling_pos)$/;"	f	typeref:typename:int
display_moves	display_moves.c	/^void display_moves(t_game *game)$/;"	f	typeref:typename:void
draw_enemy	enemy_render.c	/^void	draw_enemy(t_game *game)$/;"	f	typeref:typename:void
draw_items	item_render.c	/^void	draw_items(t_game *game)$/;"	f	typeref:typename:void
draw_map	render_utils.c	/^void draw_map(t_game *game)$/;"	f	typeref:typename:void
draw_portal	portal_render.c	/^void	draw_portal(t_game *game)$/;"	f	typeref:typename:void
draw_walls	wall_render.c	/^void	draw_walls(t_game *game)$/;"	f	typeref:typename:void
drawobj	render_utils.c	/^void	drawobj(t_image *image, t_point pos, t_point size, int color)$/;"	f	typeref:typename:void
drawtexture	render_utils.c	/^void	drawtexture(t_image *image, t_image *texture, t_point pos, long double scale)$/;"	f	typeref:typename:void
free_displays	free_displays.c	/^int	free_displays(t_game *game)$/;"	f	typeref:typename:int
free_items	item_render_utils.c	/^void	free_items(t_item *items)$/;"	f	typeref:typename:void
free_walls	wall_render.c	/^void	free_walls(t_tile *walls)$/;"	f	typeref:typename:void
ft_abs	math.c	/^int	ft_abs(int num)$/;"	f	typeref:typename:int
ft_free_arr	ft_free.c	/^void	ft_free_arr(char **arr)$/;"	f	typeref:typename:void
ft_free	ft_free.c	/^void	ft_free(t_game *game, char *line)$/;"	f	typeref:typename:void
ft_freesplit	free_displays.c	/^void	ft_freesplit(char **str)$/;"	f	typeref:typename:void
ft_get_color	render_utils.c	/^int ft_get_color(t_image *data, int x, int y)$/;"	f	typeref:typename:int
ft_pixelput	ft_pixelput.c	/^void	ft_pixelput(t_image *data, int x, int y, int color)$/;"	f	typeref:typename:void
game_loop	game_loop.c	/^int	game_loop(t_game *game)$/;"	f	typeref:typename:int
game_start	game_loop.c	/^void	game_start(t_game *game)$/;"	f	typeref:typename:void
get_map_height	map_parse_utils.c	/^void	get_map_height(t_game *game)$/;"	f	typeref:typename:void
get_map_width	map_parse_utils.c	/^void	get_map_width(t_game *game)$/;"	f	typeref:typename:void
get_mouse_position	get_mouse_pos.c	/^t_point get_mouse_position(t_game *game)$/;"	f	typeref:typename:t_point
get_time	get_time.c	/^long long	get_time(void)$/;"	f	typeref:typename:long long
init_game	init_game.c	/^void	init_game(t_game *game)$/;"	f	typeref:typename:void
init_map	init_map.c	/^void	init_map(t_game *game, char *argv1)$/;"	f	typeref:typename:void
init_window	init_window.c	/^void	init_window(t_game *game)$/;"	f	typeref:typename:void
is_allowed_char	map_parse.c	/^int	is_allowed_char(t_game *game)$/;"	f	typeref:typename:int
is_at_least_one_CPEX	map_parse.c	/^int	is_at_least_one_CPEX(t_game *game)$/;"	f	typeref:typename:int
is_one_PE	map_parse.c	/^int	is_one_PE(t_game *game)$/;"	f	typeref:typename:int
is_only_1	map_parse_utils.c	/^void	is_only_1(char *map_line)$/;"	f	typeref:typename:void
is_rectangular	map_parse.c	/^int	is_rectangular(t_game *game)$/;"	f	typeref:typename:int
is_surrounded_by_1	map_parse_utils.c	/^int	is_surrounded_by_1(t_game *game)$/;"	f	typeref:typename:int
is_touching_ceiling	collisions.c	/^int	is_touching_ceiling(t_game *game)$/;"	f	typeref:typename:int
is_touching_exit	collisions.c	/^int	is_touching_exit(t_game *game)$/;"	f	typeref:typename:int
is_touching_floor	collisions.c	/^int	is_touching_floor(t_game *game)$/;"	f	typeref:typename:int
is_touching_wall_left	collisions.c	/^int	is_touching_wall_left(t_game *game)$/;"	f	typeref:typename:int
is_touching_wall_right	collisions.c	/^int	is_touching_wall_right(t_game *game)$/;"	f	typeref:typename:int
items_count	item_render_utils.c	/^int	items_count(t_item *items)$/;"	f	typeref:typename:int
key_pressed	input_handler.c	/^int	key_pressed(int keysym, t_game *game)$/;"	f	typeref:typename:int
key_released	input_handler.c	/^int	key_released(int keysym, t_game *game)$/;"	f	typeref:typename:int
main	main.c	/^int	main(int argc, char **argv)$/;"	f	typeref:typename:int
map_parse	map_parse.c	/^int	map_parse(t_game *game, char *argv1)$/;"	f	typeref:typename:int
new_item	item_render_utils.c	/^t_item  *new_item(t_game* game)$/;"	f	typeref:typename:t_item *
new_wall	wall_render.c	/^t_tile  *new_wall(t_game *game)$/;"	f	typeref:typename:t_tile *
normalize	math.c	/^t_point	normalize(t_point point)$/;"	f	typeref:typename:t_point
parse	parse.c	/^int	parse(t_game *game, int argc, char **argv)$/;"	f	typeref:typename:int
position_enemy	enemy_render.c	/^void	position_enemy(t_game *game)$/;"	f	typeref:typename:void
position_item	item_render.c	/^void	position_item(t_game *game)$/;"	f	typeref:typename:void
position_portal	portal_render.c	/^void	position_portal(t_game *game)$/;"	f	typeref:typename:void
position_wall	wall_render.c	/^void	position_wall(t_game *game)$/;"	f	typeref:typename:void
read_map	map_parse_utils.c	/^char **read_map(char *file_name)$/;"	f	typeref:typename:char **
renderer	game_loop.c	/^int	renderer(t_game *game)$/;"	f	typeref:typename:int
update	game_loop.c	/^int	update(t_game *game)$/;"	f	typeref:typename:int
