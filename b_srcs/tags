!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
add_enemy	enemy_render_utils.c	/^void	add_enemy(t_enemy **enemies, t_enemy *new_enemy)$/;"	f
add_item	item_render_utils.c	/^void	add_item(t_item **items, t_item *new_item)$/;"	f
add_wall	wall_render.c	/^void	add_wall(t_tile **walls, t_tile *new_wall)$/;"	f
animate_enemies	animate_utils2.c	/^void	animate_enemies(t_game *game)$/;"	f
animate_enemy_falling	animate_utils3.c	/^void	animate_enemy_falling(t_game *game, t_enemy *enemy)$/;"	f
animate_enemy_walking	animate_utils3.c	/^void	animate_enemy_walking(t_game *game, t_enemy *enemy)$/;"	f
animate_enemy	animate_utils2.c	/^void	animate_enemy(t_game *game, t_enemy *enemy)$/;"	f
animate_player_attacking	animate_utils.c	/^void	animate_player_attacking(t_game *game)$/;"	f
animate_player_falling	animate_utils.c	/^void	animate_player_falling(t_game *game)$/;"	f
animate_player_idle	animate.c	/^void	animate_player_idle(t_game *game)$/;"	f
animate_player_jumping	animate_utils.c	/^void	animate_player_jumping(t_game *game)$/;"	f
animate_player_running	animate.c	/^void	animate_player_running(t_game *game)$/;"	f
animate_player	animate.c	/^void	animate_player(t_game *game)$/;"	f
animate	animate.c	/^void	animate(t_game *game)$/;"	f
calculate_delta	delta.c	/^void	calculate_delta(t_game *game)$/;"	f
clamp	math.c	/^float clamp(float value, float min, float max)$/;"	f
clear_enemy	enemy_render_utils.c	/^void    clear_enemy(t_game *game)$/;"	f
clear_item	item_render_utils.c	/^void	clear_item(t_game *game)$/;"	f
clear_player	clear_player.c	/^void	clear_player(t_game *game)$/;"	f
contiguous_ceiling	collisions_utils.c	/^int	contiguous_ceiling(t_game *game, t_point floor_pos)$/;"	f
contiguous_floor	collisions_utils.c	/^int	contiguous_floor(t_game *game, t_point ceiling_pos)$/;"	f
display_moves	display_moves.c	/^void	display_moves(t_game *game)$/;"	f
draw_items	item_render.c	/^void	draw_items(t_game *game)$/;"	f
draw_map	render_utils.c	/^void draw_map(t_game *game)$/;"	f
draw_mirroredtexture	render_utils2.c	/^void    draw_mirroredtexture(t_image *image, t_image *texture, t_point pos, long double scale)$/;"	f
draw_moves	display_moves.c	/^void	draw_moves(t_game *game, int moves, t_point move_pos)$/;"	f
draw_portal	portal_render.c	/^void	draw_portal(t_game *game)$/;"	f
draw_walls	wall_render.c	/^void	draw_walls(t_game *game)$/;"	f
drawobj	render_utils.c	/^void	drawobj(t_image *image, t_point pos, t_point size, int color)$/;"	f
drawtexture	render_utils.c	/^void	drawtexture(t_image *image, t_image *texture, t_point pos, long double scale)$/;"	f
enemies_count	enemy_render_utils.c	/^int	enemies_count(t_enemy *enemies)$/;"	f
enemy_touching_ceiling	enemy_collisions.c	/^int	enemy_touching_ceiling(t_game *game, t_enemy *enemy)$/;"	f
enemy_touching_exit	enemy_collisions.c	/^int	enemy_touching_exit(t_game *game, t_enemy *enemy)$/;"	f
enemy_touching_floor	enemy_collisions.c	/^int	enemy_touching_floor(t_game *game, t_enemy *enemy)$/;"	f
enemy_touching_wall_left	enemy_collisions.c	/^int	enemy_touching_wall_left(t_game *game, t_enemy *enemy)$/;"	f
enemy_touching_wall_right	enemy_collisions.c	/^int	enemy_touching_wall_right(t_game *game, t_enemy *enemy)$/;"	f
free_displays	free_displays.c	/^int	free_displays(t_game *game)$/;"	f
free_enemies	enemy_render_utils.c	/^void	free_enemies(t_enemy *enemies)$/;"	f
free_items	item_render_utils.c	/^void	free_items(t_item *items)$/;"	f
free_player_idle	free_sprites.c	/^void	free_player_idle(t_game *game)$/;"	f
free_player_running	free_sprites.c	/^void	free_player_running(t_game *game)$/;"	f
free_player_sprites	free_sprites.c	/^void	free_player_sprites(t_game *game)$/;"	f
free_sprites	free_sprites.c	/^void	free_sprites(t_game *game)$/;"	f
free_walls	wall_render.c	/^void	free_walls(t_tile *walls)$/;"	f
ft_abs	math.c	/^int	ft_abs(int num)$/;"	f
ft_free_arr	ft_free.c	/^void	ft_free_arr(char **arr)$/;"	f
ft_free	ft_free.c	/^void	ft_free(t_game *game, char *line)$/;"	f
ft_freesplit	free_displays.c	/^void	ft_freesplit(char **str)$/;"	f
ft_get_color	render_utils.c	/^int ft_get_color(t_image *data, int x, int y)$/;"	f
ft_pixelput	ft_pixelput.c	/^void	ft_pixelput(t_image *data, int x, int y, int color)$/;"	f
game_loop	game_loop.c	/^int	game_loop(t_game *game)$/;"	f
game_start	game_loop.c	/^void	game_start(t_game *game)$/;"	f
get_map_height	map_parse_utils.c	/^void	get_map_height(t_game *game)$/;"	f
get_map_width	map_parse_utils.c	/^void	get_map_width(t_game *game)$/;"	f
get_time	get_time.c	/^long long	get_time(void)$/;"	f
init_game	init_game.c	/^void	init_game(t_game *game)$/;"	f
init_map	init_map.c	/^void	init_map(t_game *game, char *argv1)$/;"	f
init_window	init_window.c	/^void	init_window(t_game *game)$/;"	f
is_allowed_char	map_parse.c	/^int	is_allowed_char(t_game *game)$/;"	f
is_at_least_one_cpex	map_parse.c	/^int	is_at_least_one_cpex(t_game *game)$/;"	f
is_enemy_hit	enemy_render_utils2.c	/^bool	is_enemy_hit(t_game *game, t_enemy *enemy)$/;"	f
is_one_pe	map_parse.c	/^int	is_one_pe(t_game *game)$/;"	f
is_only_1	map_parse_utils.c	/^int	is_only_1(char *map_line)$/;"	f
is_rectangular	map_parse.c	/^int	is_rectangular(t_game *game)$/;"	f
is_surrounded_by_1	map_parse_utils.c	/^int	is_surrounded_by_1(t_game *game)$/;"	f
items_count	item_render_utils.c	/^int	items_count(t_item *items)$/;"	f
key_pressed	input_handler.c	/^int	key_pressed(int keysym, t_game *game)$/;"	f
key_released	input_handler.c	/^int	key_released(int keysym, t_game *game)$/;"	f
main	main.c	/^int	main(int argc, char **argv)$/;"	f
map_parse	map_parse.c	/^int	map_parse(t_game *game, char *argv1)$/;"	f
new_enemy	enemy_render_utils.c	/^t_enemy	*new_enemy(t_game *game)$/;"	f
new_item	item_render_utils.c	/^t_item  *new_item(t_game* game)$/;"	f
new_wall	wall_render.c	/^t_tile  *new_wall(t_game *game)$/;"	f
normalize	math.c	/^t_point	normalize(t_point point)$/;"	f
parse	parse.c	/^int	parse(t_game *game, int argc, char **argv)$/;"	f
player_touching_ceiling	collisions.c	/^int	player_touching_ceiling(t_game *game)$/;"	f
player_touching_exit	collisions.c	/^int	player_touching_exit(t_game *game)$/;"	f
player_touching_floor	collisions.c	/^int	player_touching_floor(t_game *game)$/;"	f
player_touching_wall_left	collisions.c	/^int	player_touching_wall_left(t_game *game)$/;"	f
player_touching_wall_right	collisions.c	/^int	player_touching_wall_right(t_game *game)$/;"	f
position_enemy	enemy_render.c	/^void	position_enemy(t_game *game)$/;"	f
position_item	item_render.c	/^void	position_item(t_game *game)$/;"	f
position_portal	portal_render.c	/^void	position_portal(t_game *game)$/;"	f
position_wall	wall_render.c	/^void	position_wall(t_game *game)$/;"	f
read_map	map_parse_utils.c	/^char **read_map(char *file_name)$/;"	f
renderer	game_loop.c	/^int	renderer(t_game *game)$/;"	f
update_attack_timer	timers.c	/^void	update_attack_timer(t_game *game)$/;"	f
update_enemy_orientation	animate_utils2.c	/^void	update_enemy_orientation(t_enemy *enemy)$/;"	f
update_enemy_pos	animate_utils2.c	/^void	update_enemy_pos(t_game *game, t_enemy *enemy)$/;"	f
update_item_orentation	item_render.c	/^void	update_item_orentation(t_game *game)$/;"	f
update	game_loop.c	/^int	update(t_game *game)$/;"	f
